
# events {}: must be defined how Nginx handles connections at a global level. 
events {}

#http {} context handles all HTTP-based protocols.
http {
    #Practically required for WP to render correctly: 
    include /etc/nginx/mime.types;

    # A server block groups all the configuration needed to handle requests for one “site” or “service.”
    server {
        # container port with TLS
        listen 443 ssl;
        # TLS version has to be TLSv1.2 or 1.3
        ssl_protocols TLSv1.2 TLSv1.3;
        # the path for the certification and the private key
        ssl_certificate     /etc/nginx/ssl/inception.crt;
        ssl_certificate_key /etc/nginx/ssl/inception.key;

        #root to find a requested file
        root /var/www/html;
        # If the request maps to a directory, which file inside should I serve?”
        # it bootstraps Wordpress
        index index.php;

        # the hostname(s) that identify which server block handles the request.
        server_name localhost; 
        #todo: change to the 42 login 

        ### location block ###
        # location { ... } block defines how nginx should handle requests that match a certain URI pattern within a server { ... } block.
        
        # Matches all requests starting with / → basically the default catch-all.
        location / {
            # try_files = tells Nginx to check a list of files or directories in order and use the first that exists, or fall back (e.g. 404).
            # $uri = the requested path (normalized URI) that Nginx uses to look for a matching file.
            # ?: separates the path from the query string
            # query_string: comes directly from the browser’s request, and Nginx just keeps it in $query_string until PHP sees it for plugins etc.
            try_files $uri $uri/ /index.php?$query_string;
        }

        # any request that ends with .php
        # If a directory is requested, Nginx serves the index file (e.g. index.php), and since it ends with .php, the request goes to the PHP block and is processed by PHP-FPM.
        location ~ \.php$ {
            #includes common FastCGI parameters from fastcgi-php.conf
            include snippets/fastcgi-php.conf;
            # forwards the request to PHP-FPM (wordpress:9000) because Nginx can’t run PHP by itself.
            fastcgi_pass wordpress:9000;
        }

    }
}


